#TebLocalPlanner官方介绍：http://wiki.ros.org/teb_local_planner

#局部路径规划器TEBPlannerROS命名空间 - 全向轮专用配置
TebLocalPlannerROS:

  #=== 🔑 核心开关：声明机器人为全向模式 ===
  # 最重要！此参数告诉TEB您的机器人是全向的 (holonomic)
  # 必须设置为 true 才能启用侧向平移等动作
  holonomic_robot: true
 
  #=== 解除束缚：配置速度与加速度 ===
  #全向轮机器人参数 - 3轮全向轮配置
  max_vel_x: 0.15 #最大x前向速度，单位：m/s (进一步降低以提高稳定性)
  max_vel_y: 0.12 #🔑 最大y侧向速度，单位：m/s (全向轮启用Y方向移动)
  max_vel_x_backwards: 0.08 #🔑 最大后退速度，单位：m/s (策略性后退)
  max_vel_theta: 0.3  #最大转向角速度，单位：rad/s (进一步降低)
  acc_lim_x: 0.1  #最大x向加速度，单位：m/s^2 (降低以提高稳定性)
  acc_lim_y: 0.08  #🔑 最大y向加速度，单位：m/s^2 (全向轮启用Y方向加速度)
  acc_lim_theta: 0.2  #最大角加速度，单位：rad/s^2 (降低)

  #=== 释放灵活性：实现原地旋转 ===
  #阿克曼小车参数，全向轮机器人设置为0
  min_turning_radius: 0.0 #🔑 全向轮可原地旋转，转弯半径为0
  wheelbase: 0.0 #轴距对全向轮不适用
  cmd_angle_instead_rotvel: False #使用角速度而非角度控制

  #用于局部路径规划的机器人外形 - 圆形全向轮配置
  #机器人外形的类型可以为：point、circular、two_circles、line、polygon，默认为point类型
  footprint_model:    
    #type: point #point类型不需要设置其它参数

    type: circular #圆形类型，适合全向轮机器人
    radius: 0.13 # 实际半径 0.13m（与您提供的半径一致）

    #type: two_circles #两个圆类型，需要设置两个圆的位置和半径
    #front_offset: 0.2 #前面的圆的位置，相对机器人中心
    #front_rasius: 0.2 #前面的圆的半径
    #rear_offset : 0.2 #后面的圆的位置，相对机器人中心
    #rear_rasius : 0.2 #前面的圆的半径

    #type: line #两条线类型，需要设置两条线的位置
    #line_start: [0.00, 0.0]
    #line_end: [0.7, 0.0]
    
    #type: polygon #多边形类型，需要设置各顶点的坐标值
    #vertices: [[-0.133, -0.125],[-0.133, 0.125],[0.133,0.125],[0.133, -0.125]]

    #type: polygon
    #vertices: [[-0.14, -0.13], [-0.14, 0.13], [0.14, 0.13], [0.14, -0.13]] #多边形端点坐标 for diff car

  #=== 智能决策：优化权重与目标容忍度 ===
  #全向轮特殊优化参数
  #目标点误差允许值 - 适合全向轮精确定位
  xy_goal_tolerance: 0.10  #🔑 到达目标点的XY容忍度 (m)
  yaw_goal_tolerance: 0.05  #🔑 到达目标点时的姿态容忍度 (rad)
  free_goal_vel: False    #不允许机器人以最大速度驶向目的地

  #轨道配置参数 - 全向轮优化
  dt_ref: 0.4 #增加时间步长，使轨迹更平滑
  dt_hysteresis: 0.08 #减小浮动范围
  
  #优化权重调整 - 针对全向轮特性
  weight_max_vel_x: 1.5 #降低X方向速度权重
  weight_max_vel_y: 1.5 #添加Y方向速度权重
  weight_max_vel_theta: 1.2 #调整角速度权重
  weight_acc_lim_x: 1.2 #增加X方向加速度约束权重
  weight_acc_lim_y: 1.2 #添加Y方向加速度约束权重
  weight_acc_lim_theta: 1.2 #增加角加速度约束权重
  weight_kinematics_nh: 1500 #增加非完整性约束权重，提高稳定性
  weight_kinematics_forward_drive: 0.5 #🔑 降低"只前进不转弯"的倾向性，鼓励复合运动
  weight_optimaltime: 1.0 #🔑 鼓励TEB寻找时间最优路径（包含斜向平移等复合运动）
  weight_obstacle: 100 #增加避障权重
  weight_inflation: 0.2 #适当增加膨胀层权重
  
  #振荡抑制 - 全向轮容易出现振荡
  oscillation_recovery: True
  oscillation_v_eps: 0.08 #降低线速度振荡阈值
  oscillation_omega_eps: 0.08 #降低角速度振荡阈值
  oscillation_recovery_min_duration: 8 #减少恢复时间
  oscillation_filter_duration: 8 #减少滤波持续时间
